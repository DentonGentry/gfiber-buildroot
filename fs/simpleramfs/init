#!/bin/sh
#
# The initial system boot script.  This only does one thing: try to find
# the root filesystem and mount it if possible.
#
mknod /dev/kmsg c 1 11
exec >/dev/kmsg 2>&1

echo "---- initramfs ('$0')"
echo "To bypass this script, use rdinit=/bin/sh"


log()
{
  echo "$*" >&2
}


die()
{
  log "$*"
  exit 1
}


trap 'log EXITED; sh' EXIT


# Mount /dev, /proc, /sys
/mounts-sys || die "couldn't mount special purpose directories"

INIT=$(cat /tmp/initcmd)

log 'Disable repartitioning'
echo 1 > /proc/sys/dev/repartition/disable

# Mount /rootfs
/mounts-root || die "couldn't mount root filesystems"

log 'Looking for init in rootfs.  To bypass this, use init=/bin/sh'
for init in "$INIT" /sbin/init /linuxrc /bin/sh; do
  [ -n "$init" ] || continue
  log "Trying '/rootfs$init'"
  [ -x "/rootfs$init" ] || continue
  case "$init" in
    /sbin/init) args=1 ;;
    *) args= ;;
  esac
  cd /rootfs
  exec switch_root /rootfs "$init" $args
done

die "couldn't switch to root filesystem"
