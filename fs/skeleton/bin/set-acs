#!/bin/sh

# set-acs <source> ACS_URL
# Where source can be:
#  cwmp - ACS set ManagementServer.URL
#  dhcp - received an ACS_URL option from DHCP/DHCP6.
#  init - initialize /tmp/cwmp/acs_url from the best available source
#  manual - manually instantiate an ACS URL

. /etc/utils.sh

log() {
  echo "set-acs:" "$@" >&2
}

usage() {
  log "Usage: $0 init"
  log "   or: $0 {cwmp | dhcp | manual} {ACS_URL | clear}]"
  log "   or: $0 print"
  exit 1
}

check_for_url() {
  if [ -z "$2" ]; then
    usage
  fi
}

update_acs_file() {
  file=$1
  acs=$2
  if [ "$acs" = "clear" ]; then
    rm -f $file
  else
    atomic $file "$acs"
  fi
}

# Remove ACS sources which reference the unreachable ACS
remove_failed_acs() {
  failed_acs=$1
  for file in /config/tr69/acs_url.cwmp /tmp/cwmp/acs_url.dhcp; do
    read url junk <$file && [ "$url" = "$failed_acs" ] && rm -f $file
  done
}

main() {
  mkdir -p /tmp/cwmp /config/tr69

  case "$1" in
    cwmp)
      check_for_url $@
      update_acs_file /config/tr69/acs_url.cwmp "$2"
      ;;
    dhcp)
      check_for_url $@
      update_acs_file /tmp/cwmp/acs_url.dhcp "$2"
      ;;
    init)
      # Fallthrough
      ;;
    manual)
      check_for_url $@
      update_acs_file /config/tr69/acs_url "$2"
      ;;
    timeout)
      check_for_url $@
      remove_failed_acs "$2"
      ;;
    *)
      usage
      ;;
  esac

  if [ -f /config/tr69/acs_url.cwmp ]; then
    acs=$(cat /config/tr69/acs_url.cwmp)
    atomic /tmp/cwmp/acs_url "$acs"
    log using CWMP ACS "$acs"
  elif [ -f /config/tr69/acs_url ]; then
    acs=$(cat /config/tr69/acs_url)
    atomic /tmp/cwmp/acs_url "$acs"
    log using Manual ACS "$acs"
  elif [ -f /tmp/cwmp/acs_url.dhcp ]; then
    acs=$(cat /tmp/cwmp/acs_url.dhcp)
    atomic /tmp/cwmp/acs_url "$acs"
    log using DHCP ACS "$acs"
  fi

  if [ ! -f /tmp/cwmp/acs_url ]; then
    # No better sources, populate a default.
    serial=$(hnvram -br 1ST_SERIAL_NUMBER)
    if [ -e /etc/ssl/private/device.key -a -e /etc/ssl/certs/device.pem ]; then
      acs=$(curl -sL --key /etc/ssl/private/device.key --cert /etc/ssl/certs/device.pem "https://config.cpe.gfsvc.com/find/$serial")
    else
      acs=$(curl -sL "https://config.cpe.gfsvc.com/find/$serial")
    fi

    if [ -z "$acs" ]; then
      acs="https://acs.prod.gfsvc.com/default/cwmp"
      log using Default ACS "$acs"
    else
      log using Findacs ACS "$acs"
    fi
    atomic /tmp/cwmp/acs_url "$acs"
  fi
}

if [ "$1" = "print" ]; then
  cat /tmp/cwmp/acs_url
else
  main "$@"
fi
