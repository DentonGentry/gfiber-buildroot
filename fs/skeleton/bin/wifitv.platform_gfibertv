#!/bin/sh

. /etc/utils.sh

WLANCLIENT="wlan0c"

RGSETUPSSID1="wlan0setup"
RGSETUPSSID2="wlan1setup"
RGSETUPPSK="very_secret_passphrase"
rgtvssid=
rgtvpsk=

CONTROL_PATH="/tmp/gpio/ledcontrol"

WIFI_DIR="/config/wifi"
WPA_CONF="$WIFI_DIR/wpa_supplicant.conf"
HOSTAP_CONF="$WIFI_DIR/hostapd.conf.wlan0"

WIRED_UP="WIRED_UP"
WIRELESS_UP="WIRELESS_UP"

create_wlan0_client_if_needed() {
  if [ ! -e "/sys/class/net/$WLANCLIENT" ]; then
    iw wlan0 interface add $WLANCLIENT type managed
  fi
}

generate_wpa_supplicant_conf() {
  local wpa_conf
  local tmp_rgtvpsk="$rgtvpsk"
  if [ -z "$tmp_rgtvpsk" ]; then
    tmp_rgtvpsk="ANYGT8CHAR"    #just make wpa_supplicant happy.
  fi
  wpa_conf=$(cat <<-EOF
	ctrl_interface=/var/run/wpa_supplicant
	eapol_version=1
	fast_reauth=1
	network={
	  ssid="${rgtvssid}tv"
	  psk="$tmp_rgtvpsk"
	  priority=3
	}
	network={
	  ssid="$RGSETUPSSID2"
	  psk="$RGSETUPPSK"
	  priority=2
	}
	#network={
	#  ssid="$RGSETUPSSID1"
	#  psk="$RGSETUPPSK"
	#  priority=1
	#}
	EOF
  )
  atomic "$WPA_CONF" "$wpa_conf"
}

is_interface_up() {
  [ -n "$(ip link show $1 2>/dev/null | grep LOWER_UP)" ]
}


is_wired_link_up() {
    is_interface_up eth0 || is_interface_up moca0
}

get_key_value() {
  local val
  if [ -z "$1" ]; then
    return ""
  fi
  val=$(cat $HOSTAP_CONF 2>/dev/null | grep "$1")
  val=${val#*=}
  echo "$val"
}

switch_route() {
  local ssid
  ip route delete default
  if [ "$1" = "wifi" ]; then
    ssid=$(iwconfig $WLANCLIENT | grep $WLANCLIENT |grep ESSID)
    ssid=${ssid##*ESSID:\"}
    ssid=${ssid%%\"*}

    case "$ssid" in
      "$RGSETUPSSID1")
        ip route add default via $WLAN0SETUPIP
        ;;
      "$RGSETUPSSID2")
        ip route add default via $WLAN1SETUPIP
        ;;
      "${rgtvssid}tv")
        ip route add default via $WLAN1TVIP
        ;;
    done
  else
    ip route add default via 192.168.1.1 dev br0
  fi
}

iw_stop_wpa_supplicant() {
  local ifc=$1
  local pidfile=/tmp/wpa_supplicant.pid.$ifc
  pkillwait -f "wpa_supplicant .* $WPA_CONF\$"
  killpid "$pidfile"
  rm -f "$pidfile"
}

iw_start_wpa_supplicant() {
  local ifc="$1"
  local pidfile="/tmp/wpa_supplicant.pid.$ifc"
  babysit 10 wpa_supplicant -P $pidfile -i "$ifc" -c $WPA_CONF 2>&1 | logos "wpa_supplicant-$ifc" &
}

last_net_state=
rgtvssid=$(get_key_value ssid)
rgtvpsk=$(get_key_value passphrase)

watch-dir "$CONTROL_PATH" "$WIFI_DIR" |
while read f; do
  NEW_rgtvssid=$(get_key_value ssid)
  NEW_rgtvpsk=$(get_key_value passphrase)
  if is_wired_link_up; then
    if [ "$last_net_state" = "$WIRED_UP" ]; then
      continue
    fi
    echo "wired state is changed, re-setup"
    iw_stop_wpa_supplicant "$WLANCLIENT"
    ifdown "$WLANCLIENT"
    ifup br0
    wifi restore
    switch_route
    last_net_state=$WIRED_UP
  else
    if [ "$last_net_state" = "$WIRELESS_UP" ] &&
       [ "$NEW_rgtvssid" = "$rgtvssid" ] &&
       [ "$NEW_rgtvpsk" = "$rgtvpsk" ]; then
      continue;
    fi
    echo "wireless state is changed, re-setup"
    rgtvssid=$NEW_rgtvssid
    rgtvpsk=$NEW_rgtvpsk
    wifi stop
    ifdown br0
    create_wlan0_client_if_needed
    generate_wpa_supplicant_conf
    switch_route "wifi"
    iw_stop_wpa_supplicant "$WLANCLIENT"
    iw_start_wpa_supplicant "$WLANCLIENT"
    last_net_state=$WIRELESS_UP
    ifup "$WLANCLIENT"
  fi
done
