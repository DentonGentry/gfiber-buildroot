iface=$1

start_dhcp() {
	echo "Starting DHCP on $iface"
	lock=/var/run/dhclient.${iface}.lock
	lockfile-create $lock
	pidfile=/var/run/dhclient.${iface}.pid
	if [ -e $pidfile ]; then
		kill $(cat $pidfile) 2>&1 > /dev/null
		rm -f $pidfile
	fi
	/usr/sbin/dhclient $iface -nw -v -pf $pidfile \
		-lf /var/run/dhclient.${iface}.lease \
		-cf /etc/dhclient.conf 2>&1 | logger -t dhclient &
	pidfile=/var/run/dhclient-v6.${iface}.pid
	if [ -e $pidfile ]; then
		kill $(cat $pidfile) 2>&1 > /dev/null
		rm -f $pidfile
	fi
	/usr/sbin/dhclient $iface -6 -S -nw -v -pf $pidfile \
		-lf /var/run/dhclient-v6.${iface}.lease \
		-cf /etc/dhclient6.conf \
	    --never-gonna-give-you-up 900 2>&1 | logger -t dhclient6 &
	lockfile-remove $lock
}

ip link set dev $iface up
if [ $(cat /etc/config/wanport) = $iface ]; then
	sleep 1
	# For GFLT110 defer running sycl until after the
	# the data path is initialized in /etc/init.d/S71data
	# There is some issue with doing it here.
	# TODO(jnewlin): Check if this if fixed in the latest SDK.
	if [ $(cat /etc/platform) != "GFLT110" ]; then
		start_sycl & 2>&1 | logos sycl &
	fi
	# start dhcp if no management vlan is assigned.
	if [ "x$(cat /etc/config/mgmtvlan)" = "x" ]; then
		start_dhcp
	fi
elif [ "man" = "$iface" ]; then
	start_dhcp

	# TODO(jnewlin): Remove this once RA's work and we can
	# can get an ipv6 address.
	if ! runnable laser; then
		mac_addr=$(cat /sys/class/net/pon0/address)
		mac_lower=$(python -c "print ':'.join('$mac_addr'.split(':')[2:])")
		v6_addr="2605:a601:ff00:100:${mac_lower}/64"
		echo "Setting v6 address to: $v6_addr"
		ip addr add "${v6_addr}" dev man
		ip -6 route add default via 2605:a601:ff00:100::1
		echo "nameserver 2001:4860:4860::8888" >/tmp/resolv.conf.dhclient6
		echo "nameserver 2001:4860:4860::8844" >>/tmp/resolv.conf.dhclient6
        cp /tmp/resolv.conf.dhclient6 /etc/resolv.conf
	fi
	# END TODO.
fi
