#!/bin/sh
. /etc/utils.sh

case "$1" in
  start)
    # if the file exists and it isn't empty
    if [ -s /config/tcp_congestion_control ]; then
      algorithm=$(cat /config/tcp_congestion_control)
      echo "Registering congestion control algorithm $algorithm"
      sysctl net.ipv4.tcp_congestion_control=$algorithm
    fi

    echo 1 >/proc/sys/net/ipv4/conf/all/arp_ignore

    # create a default resolv.conf and /etc/hosts in case DHCP doesn't.
    # (this is always true if using nfsroot).
    # 8.8.8.8 and 8.8.4.4 are well-known Google public DNS servers
    # that can be used from anywhere, so it makes a good place to start.
    # DHCP will just overwrite this file when it's ready to go.
    if [ ! -r /etc/resolv.conf ]; then
      #TODO(apenwarr): add IPv6 DNS once our uClibc can handle it.
      (echo 'nameserver 8.8.8.8';
       echo 'nameserver 8.8.4.4') >/etc/resolv.conf
    fi
    if [ ! -r /etc/hosts ]; then
      echo "127.0.0.1 localhost $(hostname)" >/etc/hosts
    fi

    # Configure dhclient with the right hostname etc.
    setup-dhclient

    # configure loopback
    ifup lo

    echo "Adding interface lan0..."
    ip link set lan0 up &&
    kernopt ip |
    while IFS=: read ip serverip gatewayip netmask hostname ifc junk; do
      # $ip should be already setup by simpleramfs.
      # TODO(apenwarr): simpleramfs should set up $gatewayip too.
      #  But right now its included networking commands are too limited.
      if [ -n "$gatewayip" ]; then
        echo "IP: adding default gateway '$gatewayip'"
        ip route add default via "$gatewayip"
      fi
    done
    echo "Bringing up interface lan0..."
    ifup lan0

    # Enable receive interrupt coalescing, this is a significant
    # performance gain for multicast receive.
    # This applies to all interfaces.
    ethtool -C lan0 rx-usecs 1000

    ;;
  stop)
    if [ ! -e /tmp/NFS ]; then
      ifdown lan0
      echo "Shutting down lan0 interface"
    fi
    ;;
  restart|reload)
    "$0" stop
    "$0" start
    ;;
  *)
    echo "Usage: $0 {start|stop|restart}"
    exit 1
esac
