#!/bin/sh

MODULE_PATH=/usr/lib/modules

has_usb_wifi() {
  for x in /sys/bus/usb/devices/*; do
    # fields from the USB descriptor to identify the device
    [ -f $x/idProduct ] && product=$(cat $x/idProduct)
    [ -f $x/idVendor ] && vendor=$(cat $x/idVendor)
    if [ "$product" = bd17 ] && [ "$vendor" = 0a5c ]; then
      echo 'bcm43236-nofirmware'
      return
    fi
    if [ "$product" = 0bdc ] && [ "$vendor" = 0a5c ]; then
      echo 'bcm43236'
      return
    fi
  done
}

# Set up WLAN, if present
if [ "$(has_usb_wifi)" = 'bcm43236-nofirmware' ]; then
  # reset the chip, AON_GPIO_015
  brcmgpio -a 15 -l
  usleep 10000
  brcmgpio -a 15 -h
  usleep 10000

  # push its firmware to it
  bcmdl /lib/firmware/bcm43236-nohotplug.bin
fi
if [ ! -z "$(has_usb_wifi)" ]; then
  [ -e ${MODULE_PATH}/bcm_dbus.ko ] && insmod ${MODULE_PATH}/bcm_dbus.ko
fi
# Broadcom PCIe Wifi modules do not require bcmdl nor bcm_dbus.ko.
[ -e ${MODULE_PATH}/wl.ko ] && insmod ${MODULE_PATH}/wl.ko

# Set up BT, if present
if is-tv-box; then
  BT_MAC=$(hnvram -rq MAC_ADDR_BT)
  if [ -z "${BT_MAC}" ]; then
    MAC=$(hnvram -rq MAC_ADDR)
    if [ -z "${MAC}" ]; then
      echo "$0: ERROR: TV Box has no MAC_ADDR nor MAC_ADDR_BT"
      exit 1
    fi
    . /etc/utils.sh
    BT_MAC=$(mac_addr_increment "${MAC}" 2)
  fi
  BT_MAC=$(echo "${BT_MAC}" | sed 's/./\U&/g')
  echo "${BT_MAC}" >/tmp/btmacaddress
fi

if ! is-bluez-platform; then
  [ -e ${MODULE_PATH}/btusb.ko ] && insmod ${MODULE_PATH}/btusb.ko
  [ -e ${MODULE_PATH}/bthid.ko ] && insmod ${MODULE_PATH}/bthid.ko
elif [ "$(kernopt wifical)" = "1" ]; then
  # If we're trying to calibrate Wifi/BT, loading
  # the production driver disrupts the process, and we need the "primary
  # kernel" bluetooth core.
  insmod /lib/modules/$(uname -r)/kernel/net/bluetooth/bluetooth.ko
  modprobe -a bluetooth
else  # Not trying to calibrate
  # With the "real" btmrvl driver we want the bluetooth core from
  # linux-backports, not the one in the kernel.
  modprobe -a compat
  insmod /lib/modules/$(uname -r)/backports/net/bluetooth/bluetooth.ko
  modprobe -a bluetooth hidp hid-gfrm uhid
  modprobe btmrvl bdaddr_base=${BT_MAC}
  modprobe btmrvl_sdio
  modprobe btusb bdaddr_base=${BT_MAC}
fi
