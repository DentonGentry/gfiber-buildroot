From 24fbee95160c3c123fff047702ab9b1ddd9bf5ae Mon Sep 17 00:00:00 2001
From: Denton Gentry <dgentry@google.com>
Date: Thu, 7 Aug 2014 12:42:56 -0700
Subject: [PATCH] Suppress excessive logging.

---
 src/ap/drv_callbacks.c       |  4 ++++
 src/drivers/driver_nl80211.c | 12 ++++++------
 2 files changed, 10 insertions(+), 6 deletions(-)

diff --git a/src/ap/drv_callbacks.c b/src/ap/drv_callbacks.c
index fb095ef..cba37c2 100644
--- a/src/ap/drv_callbacks.c
+++ b/src/ap/drv_callbacks.c
@@ -946,6 +946,10 @@ void wpa_supplicant_event(void *ctx, enum wpa_event_type event,
 		    WLAN_FC_GET_STYPE(fc) == WLAN_FC_STYPE_PROBE_REQ)
 			level = MSG_EXCESSIVE;
 	}
+	if (event == EVENT_TX_STATUS &&
+	    data->tx_status.type == WLAN_FC_TYPE_MGMT) {
+		level = MSG_EXCESSIVE;
+	}
 
 	wpa_dbg(hapd->msg_ctx, level, "Event %s (%d) received",
 		event_to_string(event), event);
diff --git a/src/drivers/driver_nl80211.c b/src/drivers/driver_nl80211.c
index 7568653..3ccbf59 100644
--- a/src/drivers/driver_nl80211.c
+++ b/src/drivers/driver_nl80211.c
@@ -7016,24 +7016,24 @@ static int wpa_driver_nl80211_send_frame(struct i802_bss *bss,
 
 	if (freq == 0 && drv->nlmode == NL80211_IFTYPE_ADHOC) {
 		freq = nl80211_get_assoc_freq(drv);
-		wpa_printf(MSG_DEBUG,
+		wpa_printf(MSG_EXCESSIVE,
 			   "nl80211: send_frame - Use assoc_freq=%u for IBSS",
 			   freq);
 	}
 	if (freq == 0) {
-		wpa_printf(MSG_DEBUG, "nl80211: send_frame - Use bss->freq=%u",
+		wpa_printf(MSG_EXCESSIVE, "nl80211: send_frame - Use bss->freq=%u",
 			   bss->freq);
 		freq = bss->freq;
 	}
 
 	if (drv->use_monitor) {
-		wpa_printf(MSG_DEBUG, "nl80211: send_frame(freq=%u bss->freq=%u) -> send_mntr",
+		wpa_printf(MSG_EXCESSIVE, "nl80211: send_frame(freq=%u bss->freq=%u) -> send_mntr",
 			   freq, bss->freq);
 		return wpa_driver_nl80211_send_mntr(drv, data, len,
 						    encrypt, noack);
 	}
 
-	wpa_printf(MSG_DEBUG, "nl80211: send_frame -> send_frame_cmd");
+	wpa_printf(MSG_EXCESSIVE, "nl80211: send_frame -> send_frame_cmd");
 	res = nl80211_send_frame_cmd(bss, freq, wait_time, data, len,
 				     &cookie, no_cck, noack, offchanok);
 	if (res == 0 && !noack) {
@@ -7070,7 +7070,7 @@ static int wpa_driver_nl80211_send_mlme(struct i802_bss *bss, const u8 *data,
 
 	mgmt = (struct ieee80211_mgmt *) data;
 	fc = le_to_host16(mgmt->frame_control);
-	wpa_printf(MSG_DEBUG, "nl80211: send_mlme - noack=%d freq=%u no_cck=%d offchanok=%d wait_time=%u fc=0x%x nlmode=%d",
+	wpa_printf(MSG_EXCESSIVE, "nl80211: send_mlme - noack=%d freq=%u no_cck=%d offchanok=%d wait_time=%u fc=0x%x nlmode=%d",
 		   noack, freq, no_cck, offchanok, wait_time, fc, drv->nlmode);
 
 	if ((is_sta_interface(drv->nlmode) ||
@@ -7120,7 +7120,7 @@ static int wpa_driver_nl80211_send_mlme(struct i802_bss *bss, const u8 *data,
 			encrypt = 0;
 	}
 
-	wpa_printf(MSG_DEBUG, "nl80211: send_mlme -> send_frame");
+	wpa_printf(MSG_EXCESSIVE, "nl80211: send_mlme -> send_frame");
 	return wpa_driver_nl80211_send_frame(bss, data, data_len, encrypt,
 					     noack, freq, no_cck, offchanok,
 					     wait_time);
-- 
2.0.0.526.g5318336

