#!/bin/sh
#
#   Buffet service is a system daemon responsible for command dispatch and
# device state publishing on local and GCD cloud channels.
#
#   Note: Buffet is ported from ChromeOS as a binary so it expects the ChromeOS
# environment. Therefore, chroot is needed to execute buffet.
#

# Bind chroot directories to tmpfs, as chroot may exist in a read-only
# filesystem. These directories are used for the DBus socket and Buffet
# libraries.
mkdir -p /tmp/lib
mount -o bind /tmp/run /chroot/chromeos/var/run
mount -o bind /tmp/lib /chroot/chromeos/var/lib
mount -o bind /etc /chroot/chromeos/etc
mount -o bind /tmp /chroot/chromeos/tmp

# Sanity check
[ -x /chroot/chromeos/bin/buffet ] || exit 0
[ -d /chroot/chromeos/etc/buffet ] || exit 0
[ -e /chroot/chromeos/var/run/dbus/system_bus_socket ] || exit 0

# Create necessary directories and dependencies to run Buffet.
mkdir -p /chroot/chromeos/var/run/buffet
mkdir -p /chroot/chromeos/var/lib/buffet
mkdir -p /chroot/chromeos/etc/ssl/certs

start() {
  echo "Starting buffet service..."
  chroot /chroot/chromeos /bin/buffet 2>&1 | logos buffet &
  [ $? -ne 0 ] && echo "Failed to start buffet..." && exit 1
  echo "Buffet started successfully"
}

stop() {
  echo "Stopping buffet..."
  pkill -x buffet
  [ $? -ne 0 ] && echo "Failed to stop buffet..." && exit 1
  echo "Buffet stopped successfully"
}

restart() {
  stop
  start
}

case "$1" in
  start)
    start
    ;;
  stop)
    stop
    ;;
  restart|reload)
    restart
    ;;
  *)
    echo "Usage: $0 {start|stop|restart}"
    exit 1
esac
