#!/bin/sh
PLATFORM=$(cat /etc/platform)
cd /app/client

updateConfig()
{
  if [ -e /tmp/config ] ; then
    . /tmp/config
  fi
  export VIDEO_OUTPUT
  export VIDEO_RESOLUTION
  export AUDIO_OUTPUT
  export VIDEO_SUPPORTED_MODES
  export CACHED_AUTH
  export SERVER_NAME
}

readword()
{
  hnvram -r "$1" | (IFS== read key value; echo "$value")
}

export LD_LIBRARY_PATH=/app/client:/usr/local/lib:$LD_LIBRARY_PATH
export SERIALNUMBER=$(readword 1ST_SERIAL_NUMBER)
[ -z "$SERIALNUMBER" ] && SERIALNUMBER=$(readword SERIAL_NO)

ulimit -c 49152

while true; do
  fatbrunomode=""
  if [ "$PLATFORM" != "GFHD100" ]; then
    fatbrunomode="--encodemode"
  fi
  cd /app/client
  updateConfig
  leds 4  # solid activity light while running miniclient
  /app/client/miniclient $fatbrunomode 127.0.0.1
  mcstate=$?
  SERVER=""
  updateConfig
  if [ "$mcstate" != "0" ]; then
    echo "Unexpected exit, miniclient restarting"
  elif [ -e /tmp/runapp ] ; then
    mv /tmp/runapp /tmp/runappold
    cd /app/client
    leds 5  # activity+red while app is running
    ./run-app
  elif [ "$SERVER" = "" ]; then
    leds 0  # off while in waitpower mode
    [ -x /app/client/waitpower ] && /app/client/waitpower 2>&1 | logger -t waitpower
  else
    mv /tmp/config /tmp/configold
    powerret=2
    while [ "$powerret" = "2" ]; do
      if [ "$SERVER_MAC" != "" ]; then
        /usr/bin/ether-wake $SERVER_MAC
      fi
      leds 4  # solid activity light while running miniclient
      /app/client/miniclient $fatbrunomode $SERVER
      if [ -e /tmp/runapp ] ; then
        mv /tmp/runapp /tmp/runappold
        leds 5  # activity+red while app is running
        cd /app/client
        ./run-app
      elif [ -e /tmp/goalone ] ; then
        powerret=1
      else
        leds 0  # off while in waitpower mode
        [ -x /app/client/waitpower ] && /app/client/waitpower 2>&1 | logger -t waitpower
        powerret=$?
      fi
      if [ -e /tmp/patch.properties ] ; then
        powerret=1
      fi
    done
  fi
done
