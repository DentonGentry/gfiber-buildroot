#!/bin/sh
cd /app/client

readword()
{
  hnvram -r "$1" | (IFS== read key value; echo "$value")
}

export LD_LIBRARY_PATH=/app/client:/usr/local/lib:$LD_LIBRARY_PATH
export SERIALNUMBER=$(readword 1ST_SERIAL_NUMBER)
[ -z "$SERIALNUMBER" ] && SERIALNUMBER=$(readword SERIAL_NO)

ulimit -c 49152

while true; do
  cd /app/client
  # This must be cleared for local server connection
  VIDEO_SUPPORTED_MODES=
  AUDIO_OUTPUT=
  export VIDEO_SUPPORTED_MODES
  export AUDIO_OUTPUT
  leds 2  # solid blue while running miniclient
  /app/client/miniclient 127.0.0.1
  SERVER=""
  if [ -e /tmp/config ] ; then
    . /tmp/config
  fi
  if [ -e /tmp/runapp ] ; then
    mv /tmp/runapp /tmp/runappold
    # TODO: add switch based on which app to run...
    cd /app/client
    leds 5  # blue+red while app is running
    ./run-app
  elif [ "$SERVER" = "" ]; then
    leds 0  # off while in waitpower mode
    [ -x /app/client/waitpower ] && /app/client/waitpower
  else
    . /tmp/config
    mv /tmp/config /tmp/configold
    export VIDEO_OUTPUT
    export VIDEO_RESOLUTION
    export AUDIO_OUTPUT
    export VIDEO_SUPPORTED_MODES
    export CACHED_AUTH
    export SERVER_NAME
    powerret=2
    while [ "$powerret" = "2" ]; do
      if [ "$SERVER_MAC" != "" ]; then
        /usr/bin/ether-wake $SERVER_MAC
      fi
      /app/client/miniclient $SERVER
      if [ -e /tmp/runapp ] ; then
        mv /tmp/runapp /tmp/runappold
        # TODO: add switch based on which app to run...
        cd /app/client
        ./run-app
      elif [ -e /tmp/goalone ] ; then
        powerret=1
      else
        leds 0  # off while in waitpower mode
        [ -x /app/client/waitpower ] && /app/client/waitpower
        powerret=$?
      fi
      if [ -e /tmp/patch.properties ] ; then
        powerret=1
      fi
    done
  fi
done
