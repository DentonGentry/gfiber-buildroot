#!/bin/sh
export LD_LIBRARY_PATH=/usr/local/lib:$LD_LIBRARY_PATH

# We might need to call this for YTLB as well for V4
verify_drm_state()
{
  # If the certificate has changed we must remove all drm files
  [ -e /user/drm/drmcert ] && read drmcert </user/drm/drmcert
  # Bruno's sha1sum doesn't have check support
  fscert=$(sha1sum /usr/local/licenses/playready.bin)
  if [ "$drmcert" != "$fscert" ]; then
    echo Certificate doesn\'t match current state, clearing files
    rm -rf /user/drm/*
    echo $fscert > /user/drm/drmcert
  fi
}

read appname opts </tmp/runappold

hdsd_mode=1

# Use same output resolution as miniclient was using
case $VIDEO_RESOLUTION in
  1920x1080p@24*) res=1080p ;;
  1920x1080p@60*) res=1080p ;;
  1920x1080i@60*) res=1080i ;;
  720x480p@60*)   res=480p  ;;
  720x480i@60*)   res=480i; hdsd_mode=0 ;;
  *)              res=720p  ;;
esac
echo "res='$res'"

export hdsd_mode
export DFBARGS="linux-input-ir-only,no-sighandler,mode=1280x720,res=$res"

# Install DFB /dev/input/event nodes
/usr/local/bin/directfb/1.4/rundfb.sh install

case $appname in
  netflix)
    cd /usr/local/bin/netflix
    export PATH=$PWD:$PATH
    export QWS_DISPLAY=directfb:boundingrectflip
    export QT_QWS_FONTDIR=/usr/local/lib/fonts/
    export QT_PLUGIN_PATH=/usr/local/plugins/
    export NF_DEV_AUDIOPROFILE=PLAYREADY
    export NF_DEV_VIDEOPROFILE=PLAYREADY
    # Bruno startup will extract the idfile from flash and store it in /tmp
    export NF_IDFILE=/tmp/idfile.secure
    verify_drm_state
    netflix $opts 2>&1 | logos netflix
    ;;
  youtube)
    cd /usr/local/bin/browsertest
    export PATH=$PWD:$PATH
    export FONTCONFIG_FILE=/usr/local/bin/browsertest/fonts.conf
    export FLASH_BYPASS_BROWSER_INVALIDATES=1
    # User-agent provided by broadcom [CASE#497867]
    export BRCM_USER_AGENT="Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/535.11 (KHTML, like Gecko) Chrome/17.0.963.12 Safari/535.11"
    [ -z "$opts" ] && opts='http://www.youtube.com/leanback?version=4'
    browsertest $opts 2>&1 | logos youtube
    ;;
  *)
    echo "Unknown application." >&2
    exit 1
    ;;
esac
