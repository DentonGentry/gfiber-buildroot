#!/bin/sh
# SpaceCast init script.
. /etc/utils.sh

# Set the stack size to 1MB (Default to 8M) to support more concurrent streams.
# When CGO is enabled, each blocking syscall (Read, Write) will call
# pthread_create to create a new thread, so stack size for 100 concurrent
# streams would be 800MB and the memory limit would be hit without this change.
ulimit -s 1024

APP="spacecast"
BINARY="/app/spacecast/appliance"
FLAGS="-logtostderr -ring_buffer_size=64MB"
if [ -e /tmp/DEBUG ]; then
  FLAGS="$FLAGS -debug=true"
fi

# Flags to support pre-fetching Widevine licenses
# Start: 14:15 UTC = 22:15 PH
# Stop:  22:15 UTC = 06:15 PH
# TODO(efirst): Make these times customizable or based on broadcast country.
FLAGS="$FLAGS -widevine_use_prefetch -widevine_metadata_dir=/config/widevine/ -widevine_license_dir=/var/media/license/ -widevine_license_shards=256 -widevine_prefetch_start_time=14:15:00 -widevine_prefetch_stop_time=22:15:00"

running() {
  [ -n "$(pgrep -f "$BINARY")" ]
}

case "$1" in
  start)
    if running; then
      echo "SpaceCast is already running!"
    else
      (
        # Bootstrap
        wait-until-created /tmp/gpio/bootstrap
        # Service file
        wait-until-created /config/service_file
        babysit_start 10 "$APP" "$BINARY" "$FLAGS"
      ) &
      echo "SpaceCast started."
    fi
    ;;
  stop)
    pkill -f "$BINARY"
    while running; do
      echo "SpaceCast is in lameduck mode. Please wait..."
      sleep 10
    done
    echo "SpaceCast stopped."
    ;;
  restart|reload)
    $0 stop;$0 start
    ;;
  *)
    echo "Usage: $0 {start|stop|restart}"
    exit 1
esac
