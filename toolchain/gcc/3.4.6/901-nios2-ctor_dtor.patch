Index: gcc/gcc/config/nios2/nios2.h
===================================================================
--- gcc/gcc/config/nios2/nios2.h	(revision 195)
+++ gcc/gcc/config/nios2/nios2.h	(revision 196)
@@ -88,8 +88,6 @@
       N_("All ld/st instructins do not use io variants (default)") },		\
     { "smallc", 0,			\
       N_("Link with a limited version of the C library") },		\
-    { "ctors-in-init", 0,			\
-      "" /* undocumented: N_("Link with static constructors and destructors in init") */ },		\
     { "", TARGET_DEFAULT, 0 }				\
 }
 
@@ -140,12 +138,12 @@
 #define STARTFILE_SPEC  \
 "%{msys-crt0=*: %*} %{!msys-crt0=*: crt1%O%s} \
  %{msys-crt0=: %eYou need a C startup file for -msys-crt0=} \
- %{mctors-in-init: crti%O%s crtbegin%O%s} \
+ crti%O%s crtbegin%O%s \
 "
 
 #undef ENDFILE_SPEC 
 #define ENDFILE_SPEC \
- "%{mctors-in-init: crtend%O%s crtn%O%s}"
+ " crtend%O%s crtn%O%s"
 
 
 /***********************
Index: gcc/gcc/config/nios2/t-nios2
===================================================================
--- gcc/gcc/config/nios2/t-nios2	(revision 195)
+++ gcc/gcc/config/nios2/t-nios2	(revision 196)
@@ -36,18 +36,8 @@
 	echo ''          >  ${DPBIT}
 	cat $(srcdir)/config/fp-bit.c >> ${DPBIT}
 
-EXTRA_MULTILIB_PARTS = crtbegin.o crtend.o crti.o crtn.o 
+EXTRA_MULTILIB_PARTS = crtbegin.o crtend.o
 
-# Assemble startup files. 
-$(T)crti.o: $(srcdir)/config/nios2/crti.asm $(GCC_PASSES) 
-	$(GCC_FOR_TARGET) $(GCC_CFLAGS) $(MULTILIB_CFLAGS) $(INCLUDES) \
-	-c -o $(T)crti.o -x assembler-with-cpp $(srcdir)/config/nios2/crti.asm 
-
-$(T)crtn.o: $(srcdir)/config/nios2/crtn.asm $(GCC_PASSES) 
-	$(GCC_FOR_TARGET) $(GCC_CFLAGS) $(MULTILIB_CFLAGS) $(INCLUDES) \
-	-c -o $(T)crtn.o -x assembler-with-cpp $(srcdir)/config/nios2/crtn.asm 
-
-
 ## You may need to provide additional #defines at the beginning of
 ## fp-bit.c and dp-bit.c to control target endianness and other options
 ##
